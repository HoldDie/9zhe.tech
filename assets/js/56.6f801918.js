(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{694:function(t,v,_){"use strict";_.r(v);var a=_(33),l=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"什么是单元测试？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是单元测试？"}},[t._v("#")]),t._v(" 什么是单元测试？")]),t._v(" "),_("ul",[_("li",[t._v("单元测试是代码层面的测试，由研发自己来编写，用于测试“自己”编写的代码的逻辑的正确性。")]),t._v(" "),_("li",[t._v("单元测试顾名思义是测试一个“单元”，有别于集成测试，这个“单元”一般是类或函数，而不是模块或者系统。")])]),t._v(" "),_("h3",{attrs:{id:"为什么要写单元测试？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要写单元测试？"}},[t._v("#")]),t._v(" 为什么要写单元测试？")]),t._v(" "),_("ul",[_("li",[t._v("写单元测试的过程本身就是代码 Code Review 和重构的过程，能有效地发现代码中的 bug 和代码设计上的问题。")]),t._v(" "),_("li",[t._v("除此之外，单元测试还是对集成测试的有力补充，还能帮助我们快速熟悉代码，是 TDD 可落地执行的改进方案。")])]),t._v(" "),_("h3",{attrs:{id:"如何编写单元测试？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何编写单元测试？"}},[t._v("#")]),t._v(" 如何编写单元测试？")]),t._v(" "),_("ul",[_("li",[t._v("写单元测试就是针对代码设计各种测试用例，以覆盖各种输入、异常、边界情况，并将其翻译成代码。")]),t._v(" "),_("li",[t._v("单元测试的认知")]),t._v(" "),_("li",[_("ul",[_("li",[t._v("编写单元测试尽管繁琐，但并不是太耗时；")]),t._v(" "),_("li",[t._v("我们可以稍微放低对单元测试代码质量的要求；")]),t._v(" "),_("li",[t._v("覆盖率作为衡量单元测试质量的唯一标准是不合理的；")]),t._v(" "),_("li",[t._v("单元测试不要依赖被测代码的具体实现逻辑；")]),t._v(" "),_("li",[t._v("单元测试框架无法测试，多半是因为代码的可测试性不好。")])])])]),t._v(" "),_("h3",{attrs:{id:"单元测试为何难落地执行？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单元测试为何难落地执行？"}},[t._v("#")]),t._v(" 单元测试为何难落地执行？")]),t._v(" "),_("ul",[_("li",[t._v("写单元测试本身比较繁琐，技术挑战不大，很多程序员不愿意去写；")]),t._v(" "),_("li",[t._v("国内研发比较偏向“快、糙、猛”，容易因为开发进度紧，导致单元测试的执行虎头蛇尾。")]),t._v(" "),_("li",[t._v("关键问题还是团队没有建立对单元测试正确的认识，觉得可有可无，单靠督促很难执行得很好。")])])])}),[],!1,null,null,null);v.default=l.exports}}]);